{"version":3,"sources":["redux/portofolio/portofolio.selectors.js","components/portofolioItem/portofolioItem.component.jsx","components/portofolio/portofolio.component.jsx","pages/portofolioPage/portofolio-page.component.jsx","App.js","redux/portofolio/portofolio.reducer.js","redux/portofolio/portofolio.data.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["selectPortofolio","createSelector","state","portofolio","products","PortofolioItem","imageUrl","className","style","backgroundImage","mapStateToProps","createStructuredSelector","connect","map","id","otherProps","PortofolioPage","App","INITIAL_STATE","portofolioReducer","action","type","persistConfig","key","storage","whiteList","rootReducer","combineReducers","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAmBC,YAC5B,CAHmB,SAAAC,GAAK,OAAIA,EAAMC,cAIlC,SAAAA,GAAU,OAAIA,EAAWC,Y,eCWdC,EAbQ,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,OACI,qBAAKC,UAAU,kBAAf,SACI,qBACIA,UAAU,QACVC,MAAO,CACHC,gBAAgB,OAAD,OAASH,EAAT,W,SCgB7BI,EAAkBC,YAAyB,CAC7CP,SAAUJ,IAGCY,cAAQF,EAARE,EAvBI,SAAC,GAAkB,IAAhBR,EAAe,EAAfA,SAClB,OAAIA,EAEA,qBAAKG,UAAU,aAAf,SAEQH,EAASS,KAAI,gBAAEC,EAAF,EAAEA,GAAOC,EAAT,wBACT,cAAC,EAAD,eAA4BA,GAAPD,QAO7B,qDCNGE,G,MARQ,WACnB,OACI,qBAAKT,UAAU,kBAAf,SACI,cAAC,EAAD,QCEGU,MARf,WACE,OACC,8BACG,cAAC,EAAD,O,8CCJAC,EAAgB,CAClBd,SCHoB,CACpB,CACIU,GAAI,EACJR,SAAU,2CAEd,CACIQ,GAAI,EACJR,SAAU,2CAEd,CACIQ,GAAI,EACJR,SAAU,2CAEd,CACIQ,GAAI,EACJR,SAAU,6CDFHa,EAPW,WAAoC,IAAnCjB,EAAkC,uDAA1BgB,EAAeE,EAAW,uCAGjD,OAFAA,EAAOC,KAEAnB,GEHboB,EAAgB,CAClBC,IAAK,OACLC,Q,OAAAA,EACAC,UAAW,CAAC,SAGVC,EAAcC,YAAgB,CACjCxB,WAAYgB,IAGAS,cAAeN,EAAeI,GCJtC,IAAMG,EAAQC,YAAYJ,EAAaK,IAAe,WAAf,EAN1B,KAQPC,EAAYC,YAAaJ,GCHtCK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAaG,UAAWA,EAAxB,SACE,cAAC,EAAD,UAINI,SAASC,eAAe,W","file":"static/js/main.91d28991.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectWorkcase = state => state.portofolio;\n\nexport const selectPortofolio = createSelector(\n    [selectWorkcase],\n    portofolio => portofolio.products\n);\n\n","import React from \"react\";\n\nimport './portofolioItem.styles.scss';\n\nconst PortofolioItem = ({ imageUrl }) => {\n    return (\n        <div className='portofolio-item'>\n            <div\n                className='image'\n                style={{\n                    backgroundImage: `url(${imageUrl})`\n                }}\n            />\n        </div>\n    )\n}\n\nexport default PortofolioItem;","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\n\nimport { selectPortofolio } from \"../../redux/portofolio/portofolio.selectors\";\nimport PortofolioItem from \"../portofolioItem/portofolioItem.component\";\n\nconst Portofolio = ({ products }) => {\n    if (products)\n    return (\n        <div className='portofolio'>\n            {\n                products.map(({id, ...otherProps}) => (\n                    <PortofolioItem key={id}{...otherProps}/>\n                ))\n            }\n        </div>\n    )\n    else\n        return (\n            <div>\n                Portofolio page\n            </div>\n        )\n}\n\nconst mapStateToProps = createStructuredSelector({\n    products: selectPortofolio\n});\n\nexport default connect(mapStateToProps)(Portofolio);","import React from \"react\";\n\nimport Portofolio from '../../components/portofolio/portofolio.component';\n\nimport './portofolio-page.styles.scss';\n\nconst PortofolioPage = () => {\n    return (\n        <div className='portofolio-page'>\n            <Portofolio/>\n        </div>\n    )\n};\n\nexport default PortofolioPage;","import './App.css';\nimport PortofolioPage from './pages/portofolioPage/portofolio-page.component';\n\nfunction App() {\n  return (\n   <div>\n      <PortofolioPage/>\n   </div>\n  );\n}\n\nexport default App;\n","import PORTOFOLIO_DATA from './portofolio.data';\n\nconst INITIAL_STATE = {\n    products: PORTOFOLIO_DATA\n};\n\nconst portofolioReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nexport default portofolioReducer;","const PORTOFOLIO_DATA = [\n    {\n        id: 1,\n        imageUrl: 'https://i.ibb.co/ZYW3VTp/brown-brim.png'\n    },\n    {\n        id: 2,\n        imageUrl: 'https://i.ibb.co/ZYW3VTp/brown-brim.png'\n    },\n    {\n        id: 3,\n        imageUrl: 'https://i.ibb.co/ZYW3VTp/brown-brim.png'\n    },\n    {\n        id: 4,\n        imageUrl: 'https://i.ibb.co/ZYW3VTp/brown-brim.png'\n    }\n]\n\nexport default PORTOFOLIO_DATA;","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //the local storage of the window\n\nimport portofolioReducer from \"./portofolio/portofolio.reducer\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whiteList: ['cart']\n};\n\nconst rootReducer = combineReducers({\n   portofolio: portofolioReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport const persistor = persistStore(store);\n\nconst result = {store, persistor};\n\nexport default result;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { store, persistor } from './redux/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}